rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the signed-in user is an admin.
    // This now includes a hardcoded "super admin" email to solve the initial bootstrap problem.
    function isSuperAdmin() {
      return request.auth.token.email == 'gradevishu@gmail.com';
    }

    function isAdmin() {
      // A user is an admin if their document says so, OR if they are the super admin.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || isSuperAdmin();
    }
  
    // Users can read their own data. Admins can read anyone's data.
    // Users can update their own profile, but cannot change protected fields like 'points' or 'isAdmin'.
    // Admins can update anyone's profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // Let admins update any field, but users can only update specific, non-critical fields.
      allow update: if (request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'isEmailPublic', 'company', 'companyLogoUrl', 'trailheadUrl', 'githubUrl', 'linkedinUrl', 'twitterUrl', 'avatarUrl', 'starredProblems', 'subscribedSheetIds'])) || isAdmin();
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Only admins can write to problems, courses, settings, and badges. Anyone can read them.
    match /problems/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /badges/{badgeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Authenticated users can read/write to their own Salesforce data.
    match /salesforceData/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    // Users can read all sheets.
    // Users can create sheets.
    // Users can only update/delete sheets they created. Admins can manage any sheet.
    match /problem-sheets/{sheetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if resource.data.createdBy == request.auth.uid || isAdmin();
    }
    
    // Default deny all other writes.
    match /{path=**} {
      allow write: if false;
    }
  }
}