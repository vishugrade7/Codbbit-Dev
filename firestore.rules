rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read any profile.
    // They can only create their own user document.
    // They can update their own non-critical fields.
    // Admins can write to any field on any user document.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth.uid == userId && !(request.resource.data.diff(resource.data).affectedKeys().hasAny(['points', 'rank', 'isAdmin', 'achievements', 'solvedProblems', 'dsaStats', 'categoryPoints', 'submissionHeatmap', 'currentStreak', 'maxStreak']));
      allow write: if request.auth != null && isAdmin();
    }

    // Problems can be read by anyone, but only written by admins.
    match /problems/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Courses can be read by anyone, but only written by admins.
    match /courses/{courseId} {
        allow read: if true;
        allow write: if request.auth != null && isAdmin();
    }
    
    // Problem sheets can be read by anyone.
    // Authenticated users can create them.
    // The creator can update/delete their own sheet.
    // An admin can also update/delete any sheet.
    match /problem-sheets/{sheetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.createdBy == request.auth.uid || isAdmin());
    }

    // Badges can be read by anyone, but only managed by admins.
    match /badges/{badgeId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Settings (like navigation) can be read by anyone, but only managed by admins.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
  }
}
