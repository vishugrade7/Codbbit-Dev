
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user is authenticated and if their user document has isAdmin set to true.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      // Anyone can read a user's profile.
      allow read: if true;
      // Only the owner can create their own user document upon signup.
      allow create: if isOwner(userId);
      // Only the owner can update their own profile information.
      allow update: if isOwner(userId) || isAdmin(); // allow admins to update users too
      // Deleting users is disallowed from the client.
      allow delete: if false;
    }

    match /problems/{document=**} {
      // Anyone can read problems.
      allow read: if true;
      // Only admins can write (create, update, delete) problems.
      allow write: if isAdmin();
    }
    
    match /courses/{courseId} {
      // Anyone can read published courses.
      allow read: if true;
      // Only admins can write courses.
      allow write: if isAdmin();
    }

    match /problem-sheets/{sheetId} {
      // Anyone can read a problem sheet.
      allow read: if true;
      // Any authenticated user can create a sheet.
      allow create: if request.auth != null;
      // Only the original creator or an admin can update or delete a sheet.
      allow update, delete: if request.auth != null && (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    match /salesforceData/{document=**} {
      // Only authenticated users can access their own Salesforce data.
      allow read, write: if request.auth != null;
    }
    
    match /settings/{docId} {
        // Anyone can read settings (like navigation).
        allow read: if true;
        // Only admins can change settings.
        allow write: if isAdmin();
    }
    
    // Deny all other reads and writes by default for security.
    match /{path=**}/documents/{document=**} {
        allow read, write: if false;
    }
  }
}
