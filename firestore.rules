rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can read user profiles
      allow read;

      // A new user can create their own profile document.
      // We enforce that the initial values for protected fields are correct.
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.uid == userId
                    // && request.resource.data.email == request.auth.token.email // email can be null on token
                    && request.resource.data.isAdmin == false
                    && request.resource.data.points == 0
                    && request.resource.data.rank == 0;

      // An existing user can update specific fields of their own profile.
      // They are not allowed to change their points, rank, or admin status.
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && !(request.resource.data.diff(resource.data).affectedKeys().hasAny(['uid', 'email', 'points', 'rank', 'isAdmin']));

      // Users should not be able to delete their own account directly through a document delete.
      allow delete: if false;
    }

    // Rules for the 'categories' collection and 'problems' subcollection
    match /categories/{categoryId} {
      // Anyone can read categories and their problems
      allow read;

      // Only admins can create, update, or delete categories.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      match /problems/{problemId} {
        // Anyone can read problems
        allow read;

        // Only admins can create, update, or delete problems.
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
    }
  }
}
