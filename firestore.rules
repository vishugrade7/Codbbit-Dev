rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // Check if the requesting user's document has isAdmin set to true
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // USERS collection
    match /users/{userId} {
      // Anyone can read a user's public profile data.
      allow read: if true;
      
      // A user can create their own document (signup).
      allow create: if request.auth.uid == userId;
      
      // A user can update their own profile, but cannot tamper with points, rank, or admin status.
      // Subscription updates are handled by a dedicated server action.
      // Admins can update any user field.
      allow update: if isAdmin() || (request.auth.uid == userId &&
          !request.resource.data.diff(resource.data).affectedKeys().hasAny(['points', 'rank', 'isAdmin']));
                       
      // For now, disallow user deletion.
      allow delete: if false;
    }
    
    // PROBLEMS (single document model)
    match /problems/Apex {
      // Anyone can read problems.
      allow read: if true;
      // Only admins can add, edit, or remove problems.
      allow write: if isAdmin();
    }
    
    // COURSES collection
    match /courses/{courseId} {
      // Anyone can read courses.
      allow read: if true;
      // Only admins can create, update, or delete courses.
      allow write: if isAdmin();
    }

    // PROBLEM SHEETS collection
    match /problem-sheets/{sheetId} {
      // Anyone can read a problem sheet.
      allow read: if true;
      // Any authenticated user can create a sheet.
      allow create: if request.auth.uid != null;
      // Creator can edit sheet. Other authenticated users can only update the subscribers list.
      allow update: if request.auth.uid != null && (
        (request.auth.uid == resource.data.createdBy) ||
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['subscribers']))
      );
      // Only the creator can delete their sheet.
      allow delete: if request.auth.uid == resource.data.createdBy;
    }
    
    // BADGES collection
    match /badges/{badgeId} {
      // Anyone can read badges.
      allow read: if true;
      // Only admins can manage badges.
      allow write: if isAdmin();
    }
    
    // SETTINGS collection
    match /settings/navigation {
       // Anyone can read navigation settings.
       allow read: if true;
       // Only admins can update navigation.
       allow write: if isAdmin();
    }
    
    // Disallow any other operations not explicitly defined.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
