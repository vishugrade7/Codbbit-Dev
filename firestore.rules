rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Admins can manage problems.
    match /problems/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Authenticated users can manage their own sheets.
    match /problem-sheets/{sheetId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth.uid == resource.data.createdBy;
      allow delete: if request.auth.uid == resource.data.createdBy;
    }

    // Published courses are public; admins manage all courses.
    match /courses/{courseId} {
      allow read: if resource.data.isPublished == true || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read any profile, but only update their own. Admins can update any profile.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Salesforce data is private to the user.
    match /salesforceData/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Default deny all other collections.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
